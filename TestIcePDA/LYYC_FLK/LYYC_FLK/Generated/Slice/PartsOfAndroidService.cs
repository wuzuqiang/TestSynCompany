// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `PartsOfAndroidService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace Warehouse
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface PartsOfAndroidService : Ice.Object, PartsOfAndroidServiceOperations_, PartsOfAndroidServiceOperationsNC_
    {
    }
}

namespace Warehouse
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_PartsOfAndroidService_GetInTaskDetailForAndroid(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_PartsOfAndroidService_ApplyTaskForAndroid();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_PartsOfAndroidService_CompleteTaskForAndroid();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_PartsOfAndroidService_GetInventoryBillDetail(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_PartsOfAndroidService_UpdateInventoryBillDetail(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_PartsOfAndroidService_StoreOutMutiPallet();
}

namespace Warehouse
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface PartsOfAndroidServicePrx : Ice.ObjectPrx
    {
        string GetInTaskDetailForAndroid(string barcode);
        string GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInTaskDetailForAndroid> begin_GetInTaskDetailForAndroid(string barcode);
        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInTaskDetailForAndroid> begin_GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_GetInTaskDetailForAndroid(string barcode, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_GetInTaskDetailForAndroid(Ice.AsyncResult r__);

        string GetOutTaskDetailForAndroid(string barcode);
        string GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid> begin_GetOutTaskDetailForAndroid(string barcode);
        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid> begin_GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_GetOutTaskDetailForAndroid(string barcode, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_GetOutTaskDetailForAndroid(Ice.AsyncResult r__);

        void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType);
        void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_ApplyTaskForAndroid> begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType);
        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_ApplyTaskForAndroid> begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_ApplyTaskForAndroid(Ice.AsyncResult r__);

        void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType);
        void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_CompleteTaskForAndroid> begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType);
        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_CompleteTaskForAndroid> begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_CompleteTaskForAndroid(Ice.AsyncResult r__);

        string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter);
        string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInventoryBillDetail> begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter);
        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInventoryBillDetail> begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_GetInventoryBillDetail(Ice.AsyncResult r__);

        string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails);
        string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_UpdateInventoryBillDetail> begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails);
        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_UpdateInventoryBillDetail> begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_UpdateInventoryBillDetail(Ice.AsyncResult r__);

        void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo);
        void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_StoreOutMutiPallet> begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo);
        Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_StoreOutMutiPallet> begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_StoreOutMutiPallet(Ice.AsyncResult r__);
    }
}

namespace Warehouse
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface PartsOfAndroidServiceOperations_
    {
        string GetInTaskDetailForAndroid(string barcode, Ice.Current current__);

        string GetOutTaskDetailForAndroid(string barcode, Ice.Current current__);

        void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, Ice.Current current__);

        void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, Ice.Current current__);

        string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, Ice.Current current__);

        string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, Ice.Current current__);

        void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface PartsOfAndroidServiceOperationsNC_
    {
        string GetInTaskDetailForAndroid(string barcode);

        string GetOutTaskDetailForAndroid(string barcode);

        void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType);

        void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType);

        string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter);

        string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails);

        void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo);
    }
}

namespace Warehouse
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class partsTaskStringsHelper
    {
        public static void write(IceInternal.BasicStream os__, string[] v__)
        {
            os__.writeStringSeq(v__);
        }

        public static string[] read(IceInternal.BasicStream is__)
        {
            string[] v__;
            v__ = is__.readStringSeq();
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class PartsOfAndroidServicePrxHelper : Ice.ObjectPrxHelperBase, PartsOfAndroidServicePrx
    {
        #region Synchronous operations

        public void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType)
        {
            ApplyTaskForAndroid(billNo, user, taskIds, billType, null, false);
        }

        public void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            ApplyTaskForAndroid(billNo, user, taskIds, billType, context__, true);
        }

        private void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    PartsOfAndroidServiceDel_ del__ = (PartsOfAndroidServiceDel_)delBase__;
                    del__.ApplyTaskForAndroid(billNo, user, taskIds, billType, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType)
        {
            CompleteTaskForAndroid(billNo, taskIds, billType, null, false);
        }

        public void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            CompleteTaskForAndroid(billNo, taskIds, billType, context__, true);
        }

        private void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    PartsOfAndroidServiceDel_ del__ = (PartsOfAndroidServiceDel_)delBase__;
                    del__.CompleteTaskForAndroid(billNo, taskIds, billType, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string GetInTaskDetailForAndroid(string barcode)
        {
            return GetInTaskDetailForAndroid(barcode, null, false);
        }

        public string GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return GetInTaskDetailForAndroid(barcode, context__, true);
        }

        private string GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("GetInTaskDetailForAndroid");
                    delBase__ = getDelegate__(false);
                    PartsOfAndroidServiceDel_ del__ = (PartsOfAndroidServiceDel_)delBase__;
                    return del__.GetInTaskDetailForAndroid(barcode, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter)
        {
            return GetInventoryBillDetail(barCode, page, start, limit, sort, filter, null, false);
        }

        public string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return GetInventoryBillDetail(barCode, page, start, limit, sort, filter, context__, true);
        }

        private string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("GetInventoryBillDetail");
                    delBase__ = getDelegate__(false);
                    PartsOfAndroidServiceDel_ del__ = (PartsOfAndroidServiceDel_)delBase__;
                    return del__.GetInventoryBillDetail(barCode, page, start, limit, sort, filter, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string GetOutTaskDetailForAndroid(string barcode)
        {
            return GetOutTaskDetailForAndroid(barcode, null, false);
        }

        public string GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return GetOutTaskDetailForAndroid(barcode, context__, true);
        }

        private string GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("GetOutTaskDetailForAndroid");
                    delBase__ = getDelegate__(false);
                    PartsOfAndroidServiceDel_ del__ = (PartsOfAndroidServiceDel_)delBase__;
                    return del__.GetOutTaskDetailForAndroid(barcode, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo)
        {
            StoreOutMutiPallet(productCode, quantity, stationPositionNo, null, false);
        }

        public void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            StoreOutMutiPallet(productCode, quantity, stationPositionNo, context__, true);
        }

        private void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    PartsOfAndroidServiceDel_ del__ = (PartsOfAndroidServiceDel_)delBase__;
                    del__.StoreOutMutiPallet(productCode, quantity, stationPositionNo, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails)
        {
            return UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, null, false);
        }

        public string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, context__, true);
        }

        private string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("UpdateInventoryBillDetail");
                    delBase__ = getDelegate__(false);
                    PartsOfAndroidServiceDel_ del__ = (PartsOfAndroidServiceDel_)delBase__;
                    return del__.UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_ApplyTaskForAndroid> begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType)
        {
            return begin_ApplyTaskForAndroid(billNo, user, taskIds, billType, null, false, null, null);
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_ApplyTaskForAndroid> begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_ApplyTaskForAndroid(billNo, user, taskIds, billType, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_ApplyTaskForAndroid(billNo, user, taskIds, billType, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_ApplyTaskForAndroid(billNo, user, taskIds, billType, ctx__, true, cb__, cookie__);
        }

        private const string __ApplyTaskForAndroid_name = "ApplyTaskForAndroid";

        public void end_ApplyTaskForAndroid(Ice.AsyncResult r__)
        {
            end__(r__, __ApplyTaskForAndroid_name);
        }

        private Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_ApplyTaskForAndroid> begin_ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_ApplyTaskForAndroid> result__ = new IceInternal.OnewayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_ApplyTaskForAndroid>(this, __ApplyTaskForAndroid_name, ApplyTaskForAndroid_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__ApplyTaskForAndroid_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(billNo);
                os__.writeString(user);
                os__.writeStringSeq(taskIds);
                os__.writeInt(billType);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void ApplyTaskForAndroid_completed__(Warehouse.Callback_PartsOfAndroidService_ApplyTaskForAndroid cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_CompleteTaskForAndroid> begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType)
        {
            return begin_CompleteTaskForAndroid(billNo, taskIds, billType, null, false, null, null);
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_CompleteTaskForAndroid> begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_CompleteTaskForAndroid(billNo, taskIds, billType, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_CompleteTaskForAndroid(billNo, taskIds, billType, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_CompleteTaskForAndroid(billNo, taskIds, billType, ctx__, true, cb__, cookie__);
        }

        private const string __CompleteTaskForAndroid_name = "CompleteTaskForAndroid";

        public void end_CompleteTaskForAndroid(Ice.AsyncResult r__)
        {
            end__(r__, __CompleteTaskForAndroid_name);
        }

        private Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_CompleteTaskForAndroid> begin_CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_CompleteTaskForAndroid> result__ = new IceInternal.OnewayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_CompleteTaskForAndroid>(this, __CompleteTaskForAndroid_name, CompleteTaskForAndroid_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__CompleteTaskForAndroid_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(billNo);
                os__.writeStringSeq(taskIds);
                os__.writeInt(billType);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void CompleteTaskForAndroid_completed__(Warehouse.Callback_PartsOfAndroidService_CompleteTaskForAndroid cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInTaskDetailForAndroid> begin_GetInTaskDetailForAndroid(string barcode)
        {
            return begin_GetInTaskDetailForAndroid(barcode, null, false, null, null);
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInTaskDetailForAndroid> begin_GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_GetInTaskDetailForAndroid(barcode, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_GetInTaskDetailForAndroid(string barcode, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetInTaskDetailForAndroid(barcode, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetInTaskDetailForAndroid(barcode, ctx__, true, cb__, cookie__);
        }

        private const string __GetInTaskDetailForAndroid_name = "GetInTaskDetailForAndroid";

        public string end_GetInTaskDetailForAndroid(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __GetInTaskDetailForAndroid_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInTaskDetailForAndroid> begin_GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__GetInTaskDetailForAndroid_name);
            IceInternal.TwowayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_GetInTaskDetailForAndroid> result__ =  new IceInternal.TwowayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_GetInTaskDetailForAndroid>(this, __GetInTaskDetailForAndroid_name, GetInTaskDetailForAndroid_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__GetInTaskDetailForAndroid_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(barcode);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void GetInTaskDetailForAndroid_completed__(Ice.AsyncResult r__, Warehouse.Callback_PartsOfAndroidService_GetInTaskDetailForAndroid cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_GetInTaskDetailForAndroid(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInventoryBillDetail> begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter)
        {
            return begin_GetInventoryBillDetail(barCode, page, start, limit, sort, filter, null, false, null, null);
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInventoryBillDetail> begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_GetInventoryBillDetail(barCode, page, start, limit, sort, filter, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetInventoryBillDetail(barCode, page, start, limit, sort, filter, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetInventoryBillDetail(barCode, page, start, limit, sort, filter, ctx__, true, cb__, cookie__);
        }

        private const string __GetInventoryBillDetail_name = "GetInventoryBillDetail";

        public string end_GetInventoryBillDetail(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __GetInventoryBillDetail_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetInventoryBillDetail> begin_GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__GetInventoryBillDetail_name);
            IceInternal.TwowayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_GetInventoryBillDetail> result__ =  new IceInternal.TwowayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_GetInventoryBillDetail>(this, __GetInventoryBillDetail_name, GetInventoryBillDetail_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__GetInventoryBillDetail_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(barCode);
                os__.writeInt(page);
                os__.writeInt(start);
                os__.writeInt(limit);
                os__.writeString(sort);
                os__.writeString(filter);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void GetInventoryBillDetail_completed__(Ice.AsyncResult r__, Warehouse.Callback_PartsOfAndroidService_GetInventoryBillDetail cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_GetInventoryBillDetail(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid> begin_GetOutTaskDetailForAndroid(string barcode)
        {
            return begin_GetOutTaskDetailForAndroid(barcode, null, false, null, null);
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid> begin_GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_GetOutTaskDetailForAndroid(barcode, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_GetOutTaskDetailForAndroid(string barcode, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetOutTaskDetailForAndroid(barcode, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetOutTaskDetailForAndroid(barcode, ctx__, true, cb__, cookie__);
        }

        private const string __GetOutTaskDetailForAndroid_name = "GetOutTaskDetailForAndroid";

        public string end_GetOutTaskDetailForAndroid(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __GetOutTaskDetailForAndroid_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid> begin_GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__GetOutTaskDetailForAndroid_name);
            IceInternal.TwowayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid> result__ =  new IceInternal.TwowayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid>(this, __GetOutTaskDetailForAndroid_name, GetOutTaskDetailForAndroid_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__GetOutTaskDetailForAndroid_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(barcode);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void GetOutTaskDetailForAndroid_completed__(Ice.AsyncResult r__, Warehouse.Callback_PartsOfAndroidService_GetOutTaskDetailForAndroid cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_GetOutTaskDetailForAndroid(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_StoreOutMutiPallet> begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo)
        {
            return begin_StoreOutMutiPallet(productCode, quantity, stationPositionNo, null, false, null, null);
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_StoreOutMutiPallet> begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_StoreOutMutiPallet(productCode, quantity, stationPositionNo, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_StoreOutMutiPallet(productCode, quantity, stationPositionNo, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_StoreOutMutiPallet(productCode, quantity, stationPositionNo, ctx__, true, cb__, cookie__);
        }

        private const string __StoreOutMutiPallet_name = "StoreOutMutiPallet";

        public void end_StoreOutMutiPallet(Ice.AsyncResult r__)
        {
            end__(r__, __StoreOutMutiPallet_name);
        }

        private Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_StoreOutMutiPallet> begin_StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_StoreOutMutiPallet> result__ = new IceInternal.OnewayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_StoreOutMutiPallet>(this, __StoreOutMutiPallet_name, StoreOutMutiPallet_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__StoreOutMutiPallet_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(productCode);
                os__.writeInt(quantity);
                os__.writeInt(stationPositionNo);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void StoreOutMutiPallet_completed__(Warehouse.Callback_PartsOfAndroidService_StoreOutMutiPallet cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_UpdateInventoryBillDetail> begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails)
        {
            return begin_UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, null, false, null, null);
        }

        public Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_UpdateInventoryBillDetail> begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, ctx__, true, cb__, cookie__);
        }

        private const string __UpdateInventoryBillDetail_name = "UpdateInventoryBillDetail";

        public string end_UpdateInventoryBillDetail(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __UpdateInventoryBillDetail_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            string ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            ret__ = is__.readString();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<Warehouse.Callback_PartsOfAndroidService_UpdateInventoryBillDetail> begin_UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__UpdateInventoryBillDetail_name);
            IceInternal.TwowayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_UpdateInventoryBillDetail> result__ =  new IceInternal.TwowayOutgoingAsync<Warehouse.Callback_PartsOfAndroidService_UpdateInventoryBillDetail>(this, __UpdateInventoryBillDetail_name, UpdateInventoryBillDetail_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__UpdateInventoryBillDetail_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeString(inventoryBillNo);
                os__.writeString(inventroyBillDetails);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void UpdateInventoryBillDetail_completed__(Ice.AsyncResult r__, Warehouse.Callback_PartsOfAndroidService_UpdateInventoryBillDetail cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_UpdateInventoryBillDetail(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static PartsOfAndroidServicePrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            PartsOfAndroidServicePrx r = b as PartsOfAndroidServicePrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                PartsOfAndroidServicePrxHelper h = new PartsOfAndroidServicePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PartsOfAndroidServicePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            PartsOfAndroidServicePrx r = b as PartsOfAndroidServicePrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                PartsOfAndroidServicePrxHelper h = new PartsOfAndroidServicePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PartsOfAndroidServicePrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    PartsOfAndroidServicePrxHelper h = new PartsOfAndroidServicePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static PartsOfAndroidServicePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    PartsOfAndroidServicePrxHelper h = new PartsOfAndroidServicePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static PartsOfAndroidServicePrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            PartsOfAndroidServicePrx r = b as PartsOfAndroidServicePrx;
            if(r == null)
            {
                PartsOfAndroidServicePrxHelper h = new PartsOfAndroidServicePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PartsOfAndroidServicePrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            PartsOfAndroidServicePrxHelper h = new PartsOfAndroidServicePrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Ice::Object",
            "::Warehouse::PartsOfAndroidService"
        };

        public static string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new PartsOfAndroidServiceDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new PartsOfAndroidServiceDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, PartsOfAndroidServicePrx v__)
        {
            os__.writeProxy(v__);
        }

        public static PartsOfAndroidServicePrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                PartsOfAndroidServicePrxHelper result = new PartsOfAndroidServicePrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Warehouse
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface PartsOfAndroidServiceDel_ : Ice.ObjectDel_
    {
        string GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__);

        string GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__);

        void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__);

        void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__);

        string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> context__);

        string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> context__);

        void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> context__);
    }
}

namespace Warehouse
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class PartsOfAndroidServiceDelM_ : Ice.ObjectDelM_, PartsOfAndroidServiceDel_
    {
        public void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("ApplyTaskForAndroid", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(billNo);
                    os__.writeString(user);
                    os__.writeStringSeq(taskIds);
                    os__.writeInt(billType);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("CompleteTaskForAndroid", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(billNo);
                    os__.writeStringSeq(taskIds);
                    os__.writeInt(billType);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("GetInTaskDetailForAndroid", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(barcode);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("GetInventoryBillDetail", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(barCode);
                    os__.writeInt(page);
                    os__.writeInt(start);
                    os__.writeInt(limit);
                    os__.writeString(sort);
                    os__.writeString(filter);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("GetOutTaskDetailForAndroid", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(barcode);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("StoreOutMutiPallet", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(productCode);
                    os__.writeInt(quantity);
                    os__.writeInt(stationPositionNo);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("UpdateInventoryBillDetail", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeString(inventoryBillNo);
                    os__.writeString(inventroyBillDetails);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    string ret__;
                    ret__ = is__.readString();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }
}

namespace Warehouse
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class PartsOfAndroidServiceDelD_ : Ice.ObjectDelD_, PartsOfAndroidServiceDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "ApplyTaskForAndroid", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                PartsOfAndroidService servant__ = null;
                try
                {
                    servant__ = (PartsOfAndroidService)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.ApplyTaskForAndroid(billNo, user, taskIds, billType, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "CompleteTaskForAndroid", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                PartsOfAndroidService servant__ = null;
                try
                {
                    servant__ = (PartsOfAndroidService)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.CompleteTaskForAndroid(billNo, taskIds, billType, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string GetInTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "GetInTaskDetailForAndroid", Ice.OperationMode.Idempotent, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                PartsOfAndroidService servant__ = null;
                try
                {
                    servant__ = (PartsOfAndroidService)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.GetInTaskDetailForAndroid(barcode, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "GetInventoryBillDetail", Ice.OperationMode.Idempotent, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                PartsOfAndroidService servant__ = null;
                try
                {
                    servant__ = (PartsOfAndroidService)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.GetInventoryBillDetail(barCode, page, start, limit, sort, filter, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string GetOutTaskDetailForAndroid(string barcode, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "GetOutTaskDetailForAndroid", Ice.OperationMode.Idempotent, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                PartsOfAndroidService servant__ = null;
                try
                {
                    servant__ = (PartsOfAndroidService)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.GetOutTaskDetailForAndroid(barcode, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "StoreOutMutiPallet", Ice.OperationMode.Idempotent, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                PartsOfAndroidService servant__ = null;
                try
                {
                    servant__ = (PartsOfAndroidService)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.StoreOutMutiPallet(productCode, quantity, stationPositionNo, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "UpdateInventoryBillDetail", Ice.OperationMode.Idempotent, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                PartsOfAndroidService servant__ = null;
                try
                {
                    servant__ = (PartsOfAndroidService)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }
    }
}

namespace Warehouse
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class PartsOfAndroidServiceDisp_ : Ice.ObjectImpl, PartsOfAndroidService
    {
        #region Slice operations

        public string GetInTaskDetailForAndroid(string barcode)
        {
            return GetInTaskDetailForAndroid(barcode, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string GetInTaskDetailForAndroid(string barcode, Ice.Current current__);

        public string GetOutTaskDetailForAndroid(string barcode)
        {
            return GetOutTaskDetailForAndroid(barcode, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string GetOutTaskDetailForAndroid(string barcode, Ice.Current current__);

        public void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType)
        {
            ApplyTaskForAndroid(billNo, user, taskIds, billType, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void ApplyTaskForAndroid(string billNo, string user, string[] taskIds, int billType, Ice.Current current__);

        public void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType)
        {
            CompleteTaskForAndroid(billNo, taskIds, billType, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void CompleteTaskForAndroid(string billNo, string[] taskIds, int billType, Ice.Current current__);

        public string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter)
        {
            return GetInventoryBillDetail(barCode, page, start, limit, sort, filter, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string GetInventoryBillDetail(string barCode, int page, int start, int limit, string sort, string filter, Ice.Current current__);

        public string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails)
        {
            return UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string UpdateInventoryBillDetail(string inventoryBillNo, string inventroyBillDetails, Ice.Current current__);

        public void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo)
        {
            StoreOutMutiPallet(productCode, quantity, stationPositionNo, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void StoreOutMutiPallet(string productCode, int quantity, int stationPositionNo, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Ice::Object",
            "::Warehouse::PartsOfAndroidService"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[1];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[1];
        }

        public static new string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus GetInTaskDetailForAndroid___(PartsOfAndroidService obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string barcode;
            barcode = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.GetInTaskDetailForAndroid(barcode, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus GetOutTaskDetailForAndroid___(PartsOfAndroidService obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string barcode;
            barcode = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.GetOutTaskDetailForAndroid(barcode, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus ApplyTaskForAndroid___(PartsOfAndroidService obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string billNo;
            billNo = is__.readString();
            string user;
            user = is__.readString();
            string[] taskIds;
            taskIds = is__.readStringSeq();
            int billType;
            billType = is__.readInt();
            is__.endReadEncaps();
            obj__.ApplyTaskForAndroid(billNo, user, taskIds, billType, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus CompleteTaskForAndroid___(PartsOfAndroidService obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string billNo;
            billNo = is__.readString();
            string[] taskIds;
            taskIds = is__.readStringSeq();
            int billType;
            billType = is__.readInt();
            is__.endReadEncaps();
            obj__.CompleteTaskForAndroid(billNo, taskIds, billType, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus GetInventoryBillDetail___(PartsOfAndroidService obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string barCode;
            barCode = is__.readString();
            int page;
            page = is__.readInt();
            int start;
            start = is__.readInt();
            int limit;
            limit = is__.readInt();
            string sort;
            sort = is__.readString();
            string filter;
            filter = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.GetInventoryBillDetail(barCode, page, start, limit, sort, filter, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus UpdateInventoryBillDetail___(PartsOfAndroidService obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string inventoryBillNo;
            inventoryBillNo = is__.readString();
            string inventroyBillDetails;
            inventroyBillDetails = is__.readString();
            is__.endReadEncaps();
            IceInternal.BasicStream os__ = inS__.ostr();
            string ret__ = obj__.UpdateInventoryBillDetail(inventoryBillNo, inventroyBillDetails, current__);
            os__.writeString(ret__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus StoreOutMutiPallet___(PartsOfAndroidService obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            string productCode;
            productCode = is__.readString();
            int quantity;
            quantity = is__.readInt();
            int stationPositionNo;
            stationPositionNo = is__.readInt();
            is__.endReadEncaps();
            obj__.StoreOutMutiPallet(productCode, quantity, stationPositionNo, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "ApplyTaskForAndroid",
            "CompleteTaskForAndroid",
            "GetInTaskDetailForAndroid",
            "GetInventoryBillDetail",
            "GetOutTaskDetailForAndroid",
            "StoreOutMutiPallet",
            "UpdateInventoryBillDetail",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return ApplyTaskForAndroid___(this, inS__, current__);
                }
                case 1:
                {
                    return CompleteTaskForAndroid___(this, inS__, current__);
                }
                case 2:
                {
                    return GetInTaskDetailForAndroid___(this, inS__, current__);
                }
                case 3:
                {
                    return GetInventoryBillDetail___(this, inS__, current__);
                }
                case 4:
                {
                    return GetOutTaskDetailForAndroid___(this, inS__, current__);
                }
                case 5:
                {
                    return StoreOutMutiPallet___(this, inS__, current__);
                }
                case 6:
                {
                    return UpdateInventoryBillDetail___(this, inS__, current__);
                }
                case 7:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 8:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 9:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 10:
                {
                    return ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type Warehouse::PartsOfAndroidService was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type Warehouse::PartsOfAndroidService was not generated with stream support";
            throw ex;
        }

        #endregion
    }
}
